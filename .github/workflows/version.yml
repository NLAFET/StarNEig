name: StarNEig version

on:
  push:
    tags:
      - 'v*'

jobs:

  package:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
          - os: ubuntu-20.04

    steps:
      - name: Get the version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependences
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install gfortran libopenblas-dev libopenmpi-dev \
            libscalapack-openmpi-dev libstarpu-dev libgsl-dev

      - name: Configure
        run: |
          mkdir build
          cd build/
          cmake \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCPACK_PACKAGE_FILE_NAME=starneig \
            -DSTARNEIG_ENABLE_OPTIMIZATION=OFF ../src/

      - name: Build
        run: |
          cd build/
          make

      - name: Create package
        run: |
          cd build/
          cpack -G DEB

      - name: Upload package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/starneig.deb
          asset_name: StarNEig-${{ env.RELEASE_VERSION }}-${{ matrix.os }}.deb
          tag: ${{ github.ref }}
          overwrite: true

  deploy-manual:
    runs-on: ubuntu-20.04
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: Get the version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 

      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install dependences
        run: |
          sudo apt-get update
          sudo apt-get install texlive-full doxygen

      - name: Build manual
        run: |
          echo ${{ env.RELEASE_VERSION }} > version.txt
          mkdir build_docs
          (
            cd build_docs/
            cmake ../docs/
            make
          )
          mkdir manual
          cp -r build_docs/html build_docs/starneig_manual.pdf manual/

      - name: Deploy manual to GitHub pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: manual
          TARGET_FOLDER: ${{ env.RELEASE_VERSION }}
          COMMIT_MESSAGE: "Upload ${{ env.RELEASE_VERSION }} documentation"

      - name: Deploy manual to GitHub
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: manual/starneig_manual.pdf
          asset_name: StarNEig-${{ env.RELEASE_VERSION }}-users-guide.pdf
          tag: ${{ github.ref }}
          overwrite: true
